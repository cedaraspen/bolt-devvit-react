# Project structure
There are four folders to code in:
- /src/devvit This is a Devvit app. NEVER write React code in here. Use `devvit_search` to understand how Devvit works. Never use web apis in here. This is a sandboxed environment. Import Devvit hooks from public-api like this: `import { Devvit, useWebView } from '@devvit/public-api';`. Devvit apps are shown to the user in the Reddit feed. Devvit apps rely on context to pass down helpful apis including (redis, reddit, media, and more).
- /src/client This is the full screen, client side webview. To persist data and access the server, call `fetch(/my/api/endpoint)`. This is how you get access to the APIs you write in src/server.
- src/server: This is a serverless backend written in Node. This is where you can access redis and save data.
- src/shared: This is where you can place code that is to be shared between the devvit app, client, and server and the webview. It's a great place for shared types.

## Guidelines for src/client/**/*:
- Use NPM dependencies if needed, ensure they are web compatible
- You cannot use websockets.
- Obey the rules of hooks and only write valid React code

## Guidelines for src/devvit/**/*:
- Never write React or reference react, only write valid Devvit
- Never use web or node APIs. This app is ran in a controlled worker environment.
- Never suggest using dependencies from NPM since they will likely not work

## Guidelines for src/devvit/**/*:
- This is a serverless node.js environment, you have all node globals (using node: prefix) at your disposal except: fs, http, https, and net.

- Instead of http or https, prefer fetch
- You cannot write files as you are running on a read only file system
- Do not install any libraries that rely on these to function
- Websockets are not supported
- HTTP streaming is not supported
- Redis is accessible from `ctx.devvit`

As this is a serverless runtime (akin to AWS Lambda), do not try to run SQLite or stateful in memory processes.

## Guidelines for webroot
NEVER TOUCH ANYTHING IN THIS FOLDER. DO NOT CONTINUE!

# Dev environment setup
1. Run npm install first
2. Do not run npm run dev!
3. Ask the user to run `npm run login` 
4. Ask the user to replace YOUR_APP_NAME in devvit.yaml. Do not proceed until that is replaced with something else.
5. Ask the user to update the dev:devvit command in package.json to replace YOUR_SUBREDDIT_NAME. Do not proceed until this is changed.  